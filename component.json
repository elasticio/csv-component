{
  "title": "CSV",
  "description": "A comma-separated values (CSV) file stores tabular data (numbers and text) in plain-text form",
  "deprecated": true,
  "docsUrl": "https://github.com/elasticio/csv-component",
  "buildType": "docker",
  "version": "3.0.0",
  "actions": {
    "read_action": {
      "main": "./lib/actions/read.js",
      "title": "Read CSV attachment",
      "help": {
        "description": "This action will read the CSV attachment of the incoming message or from the specified URL and output a JSON object.",
        "link": "/components/csv/actions#read-csv-attachment"
      },
      "fields": {
        "emitAll": {
          "label": "Emit Behavior",
          "required": true,
          "viewClass": "SelectView",
          "model": {
            "true": "Fetch All",
            "false": "Emit Individually"
          },
          "prompt": "Select Emit Behavior"
        }
      },
      "metadata": {
        "in": "./lib/schemas/read.in.json",
        "out": {}
      }
    },
    "write_from_stream": {
      "main": "./lib/actions/writeStream.js",
      "title": "Create CSV From Message Stream",
      "help": {
        "description": "Multiple incoming events can be combined into one CSV file with the write CSV action.",
        "link": "/components/csv/actions#write-csv-attachment"
      },
      "fields": {
        "uploadToAttachment": {
          "label": "Upload CSV as file to attachments",
          "viewClass": "CheckBoxView",
          "description": "If checked store the generated CSV data as an attachment",
          "prompt": "Include headers? Default Yes."
        },
        "separator": {
          "viewClass": "TextFieldView",
          "required": false,
          "label": "Separator",
          "note": "A single char used to delimit the CSV file. Default to ','"
        },
        "order": {
          "viewClass": "TextFieldView",
          "required": false,
          "label": "Column Order",
          "note": "A string delimited with the separator (use same as above) indicating which columns & in what order the columns should appear in the resulting file. If omitted, the column order in the resulting file will not be deterministic."
        }
      },
      "dynamicMetadata": true
    },
    "write_attachment_from_array": {
      "main": "./lib/actions/writeArray.js",
      "title": "Create CSV From JSON Array",
      "help": {
        "description": "Incoming array can be converted into one CSV file",
        "link": "/components/csv/actions#write-csv-attachment"
      },
      "fields": {
        "uploadToAttachment": {
          "label": "Upload CSV as file to attachments",
          "viewClass": "CheckBoxView",
          "description": "If checked store the generated CSV data as an attachment",
          "prompt": "Include headers? Default Yes."
        },
        "separator": {
          "viewClass": "TextFieldView",
          "required": false,
          "label": "Separator",
          "note": "A single char used to delimit the CSV file. Default to ','"
        },
        "order": {
          "viewClass": "TextFieldView",
          "required": false,
          "label": "Column Order",
          "note": "A string delimited with the separator (use same as above) indicating which columns & in what order the columns should appear in the resulting file. If omitted, the column order in the resulting file will not be deterministic."
        }
      },
      "dynamicMetadata": true
    }
  }
}
